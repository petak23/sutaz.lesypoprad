<?phpnamespace App\FrontModule\Presenters\Forms\UserLog;use Nette\Application\UI\Form;use Nette\Security;use Nette\Utils\Html;use Nette\Utils\Image;use Nette\Utils\Random;use Language_support;use DbTable;use Nette\Mail\Message;use Nette\Mail\SendmailMailer;use Latte;/** * Formular editacie prihlaseneho uzivatela * Posledna zmena 12.04.2017 *  * @author     Ing. Peter VOJTECH ml. <petak23@gmail.com> * @copyright  Copyright (c) 2012 - 2017 Ing. Peter VOJTECH ml. * @license * @link       http://petak23.echo-msz.eu * @version    1.0.2 */class UserEditFormFactory {  /** @var Language_support\UserLog */  private $userLog_texts;  /** @var DbTable\User_profiles */  public $user_profiles;  /** @var Nette\Security\User */  public $user;  /** @var string */  private $wwwDir;  /** @var \Nette\Database\Table\ActiveRow|FALSE */  private $clen;  /** @var DbTable\Skoly */  private $skoly;  /** @var DbTable\User_team */  private $user_team;  /** @var string */  private $nazov_stranky;  /** @param Security\User $user   */  public function __construct(Security\User $user, Language_support\UserLog $userLog_texts, DbTable\User_profiles $user_profiles, DbTable\Skoly $skoly, DbTable\User_team $user_team) {    $this->user = $user;    $this->userLog_texts = $userLog_texts;    $this->user_profiles = $user_profiles;    $this->skoly = $skoly;    $this->user_team = $user_team;	}    /**    * Vratenie textu pre dany kluc a jazyk   * @param string $key - kluc daneho textu   * @return string - hodnota pre dany text */  private function trLang($key) {    return $this->userLog_texts->trText($key);  }  /**   * Formular pre editaciu prihlaseneho pouzivatela   * @param array $user_view_fields   * @param string $basePath   * @param string $wwwDir   * @param Nette\Database\Table\ActiveRow $clen   * @return Form */  public function create($user_view_fields, $basePath, $wwwDir, $clen, $nazov_stranky)  {    $this->wwwDir = $wwwDir;    $this->clen = $clen;    $this->nazov_stranky = $nazov_stranky;    $form = new Form();		$form->addProtection();    $form->addHidden('id');$form->addHidden('avatar_75');$form->addHidden('avatar_25');		$form->addText('meno', $this->trLang('UserEditForm_meno'), 50, 80)				 ->addRule(Form::MIN_LENGTH, $this->trLang('UserEditForm_meno_ar'), 3)				 ->setRequired($this->trLang('UserEditForm_meno_sr'));    $form->addText('priezvisko', $this->trLang('UserEditForm_priezvisko'), 50, 50)				 ->addRule(Form::MIN_LENGTH, $this->trLang('UserEditForm_priezvisko_ar'), 3)				 ->setRequired($this->trLang('UserEditForm_priezvisko_sr'));    $form->addText('username', $this->trLang('default_log_name').":", 50)->setDisabled(TRUE);    $form->addText('email', $this->trLang('default_email').":", 50)->setDisabled(TRUE);    if ($user_view_fields["rok"]) {      $form->addText('rok', $this->trLang('UserEditForm_rok'), 3, 5)->setType('number')->setRequired(FALSE)           ->addRule(Form::RANGE, $this->trLang('UserEditForm_rok_ar'), [6, 120]);    }    $form->addTextArea('adresa', 'Adresa:', 50, 3)->setRequired(FALSE);    $skoly = $this->skoly->findAll()->fetchPairs('id', 'nazov');    $skoly_add_id = $this->skoly->findAll()->max('id') + 1;    $skoly[$skoly_add_id]='Iná škola';    $form->addSelect('id_skoly', 'Škola:')->setPrompt('Vyber svoju školu')         ->setItems($skoly)          ->addCondition(Form::EQUAL, $skoly_add_id)          ->toggle("view_add_school");    $form->addText('add_school', 'Pridaj novú školu:', 50)->setRequired(FALSE)         ->setOption('id', "view_add_school")         ->setOption('style', "visibility: none");    if ($user_view_fields["avatar"]) {      $form->addUpload('avatar', $this->trLang('UserEditForm_avatar').":")         ->setOption('description', Html::el('p')->setHtml(              Html::el('img')->src($basePath.'/www/'.('/www/'.isset($this->clen->avatar_75) ? $this->clen->avatar_75 : 'ikonky/64/figurky_64.png'))->alt('avatar').              " ".$this->trLang('default_avatar_txt')))         ->addCondition(Form::FILLED)            ->addRule(Form::IMAGE, $this->trLang('UserEditForm_avatar_oi'))            ->addRule(Form::MAX_FILE_SIZE, $this->trLang('UserEditForm_avatar_ar'), 300 * 1024 /* v bytech */);    }    if ($this->clen->id_user_team != NULL) {      $form->addText('team_nazov', 'Meno tímu:', 50)->setRequired(FALSE);      $form->addText('team_pocet', 'Počet členov:', 3, 5)->setType('number')->setRequired(FALSE)           ->addRule(Form::RANGE, "Počet musí byť v rozsahu od %d do %d", 2, 30);      $form->addTextArea('team_clenovia', 'Mená členov:', 50, 3)->setAttribute('placeholder', 'zadajte mená členov tímu');    }		$form->addSubmit('uloz', $this->trLang('base_save'))         ->setAttribute('class', 'btn-success')         ->onClick[] = [$this, 'userEditFormSubmitted'];    $form->addSubmit('cancel', 'Cancel')->setAttribute('class', 'btn-default')         ->setValidationScope(FALSE);    $renderer = $form->getRenderer();    $renderer->wrappers['error']['container'] = 'div class="row"';    $renderer->wrappers['error']['item'] = 'div class="col-md-6 col-md-offset-3 alert alert-danger"';    $renderer->wrappers['controls']['container'] = NULL;    $renderer->wrappers['pair']['container'] = 'div class="form-group row"';    $renderer->wrappers['pair']['.error'] = 'has-error';    $renderer->wrappers['control']['container'] = 'div class="col-md-6"';    $renderer->wrappers['label']['container'] = 'div class="col-lg-3 col-xs-4 col-form-label text-right"';    $renderer->wrappers['control']['container'] = 'div class="req col-lg-4 col-md-6 col-xs-8"';    $renderer->wrappers['control']['description'] = 'span class=help-block';    $renderer->wrappers['control']['errorcontainer'] = 'div class="alert alert-danger"';		return $form;	}    /**    * Spracovanie formulara   * @param Nette\Forms\Controls\SubmitButton $button Data formulara */	public function userEditFormSubmitted($button) {    $values = $button->getForm()->getValues(TRUE); 	//Nacitanie hodnot formulara		$id_user_profiles = $values['id']; // Ak je == 0 tak sa pridava    if ($this->clen->id_user_team != NULL) {      $this->user_team->uloz(['nazov'=>$values['team_nazov'], 'pocet'=>$values['team_pocet'], 'clenovia'=>$values['team_clenovia']], $this->clen->id_user_team);      unset($values['team_nazov'], $values['team_pocet'], $values['team_clenovia']);    }    if ($this->skoly->findAll()->max('id') < $values['id_skoly']) { //Idem pridať školu      $this->skoly->pridaj(['id'=>$values['id_skoly'], 'nazov'=>$values['add_school']]);      $templ = new Latte\Engine;      $params = [        "site_name"  => $this->nazov_stranky,        "nadpis"     => 'Pridanie školy užívateľom: '.$values['meno'].' '.$values['priezvisko'],        "nova_id"    => $values['id_skoly'],        "nova_nazov" => $values['add_school'],      ];      $mail = new Message;      $mail->setFrom($this->nazov_stranky.' <'.$this->clen->users->email.'>')           ->addTo('jozue@anigraph.eu')->setSubject('Sutaz.lesypoprad.sk: Pridanie školy užívateľom: '.$values['meno'].' '.$values['priezvisko'])           ->setHtmlBody($templ->renderToString(__DIR__ . '/templates/User/email_add_school-html.latte', $params));      try {        $sendmail = new SendmailMailer;        $sendmail->send($mail);      } catch (Exception $e) {        $this->flashMessage('Pri pridávaní školy došlo k chybe: '.$e->getMessage(), 'danger,n');      }    }    unset($values['add_school']);    $values['modified'] = StrFTime("%Y-%m-%d %H:%M:%S", Time());    try {      if (isset($values['avatar']) && $values['avatar'] && $values['avatar']->name != "") {        if ($values['avatar']->isImage()){          $avatar_path = "files/".$id_user_profiles."/";          $path = $this->wwwDir."/www/".$avatar_path;          $pi = pathinfo($values['avatar']->getSanitizedName());          $ext = $pi['extension'];          if (is_dir($path)) {            foreach (glob("$path*.{jpg,jpeg,gif,png}", GLOB_BRACE) as $file) {              @unlink($file);            }          }	else { mkdir($path, 0777); }          $randfn = Random::generate(25)."_";          $avatar75_name = $randfn."75.".$ext;          $avatar25_name = $randfn."25.".$ext;          $values['avatar']->move($path.$avatar75_name);          $image = Image::fromFile($path.$avatar75_name);          $image->resize(75, 75, Image::SHRINK_ONLY);          $image->save($path.$avatar75_name, 90);          $values['avatar_75'] = $avatar_path.$avatar75_name;          copy($path.$avatar75_name, $path.$avatar25_name);          $thumb = Image::fromFile($path.$avatar25_name);          $thumb->resize(25, 25, Image::SHRINK_ONLY);          $thumb->save($path.$avatar25_name, 90);          $values['avatar_25'] = $avatar_path.$avatar25_name;        } else {          $button->addError($this->trLang('user_edit_avatar_err'));          unset($values['avatar_75'], $values['avatar_25']);        }      } else {        unset($values['avatar_75'], $values['avatar_25']);      }      unset($values['id'], $values['avatar']);      $uloz = $this->user_profiles->uloz($values, $id_user_profiles);     } catch (Security\AuthenticationException $e) {      $button->addError($e->getMessage());    }	}}