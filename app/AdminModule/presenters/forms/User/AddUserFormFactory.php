<?phpnamespace App\AdminModule\Presenters\Forms\User;use Nette\Application\UI\Form;use DbTable;class AddUserFormFactory {  /** @var DbTable\Users */	private $users;  /**   * Edit hlavne menu form component factory.   * @return Nette\Application\UI\Form   */    public function create(DbTable\Users $users, $urovneReg, $user_view_fields_pohl)  {    $this->users = $users;    $form = new Form();		$form->addProtection();		$form->addText('meno', 'Meno', 50, 50)				 ->addRule(Form::MIN_LENGTH, 'Meno musí mať aspoň %s znakov', 2)         ->setAttribute('autofocus', 'autofocus')				 ->setRequired('Meno musí byť zadané!');    $form->addText('priezvisko', 'Priezvisko', 50, 50)				 ->addRule(Form::MIN_LENGTH, 'Priezvisko musí mať aspoň %s znakov', 3)				 ->setRequired('Priezvisko musí byť zadané!');    $form->addText('username', 'Užívateľské meno', 50, 50)				 ->addRule(Form::MIN_LENGTH, 'Užívateľské meno musí mať aspoň %s znakov', 3)				 ->setRequired('Užívateľské meno musí byť zadané!');    $form->addText('email', 'E-mailová adresa', 50, 50)         ->setType('email')				 ->addRule(Form::EMAIL, 'Musí byť zadaná korektná e-mailová adresa(napr. janko@hrasko.sk)')				 ->setRequired('E-mailová adresa musí byť zadaná!');    $form->addSelect('id_registracia', 'Úroveň registrácie užívateľa:', $urovneReg);    $form->addPassword('heslo', 'Heslo', 50, 50)				 ->addRule(Form::MIN_LENGTH, 'Heslo musí mať aspoň %s znakov', 5)				 ->setRequired('Heslo musí byť zadané!');    $form->addPassword('heslo2', 'Zopakovanie hesla', 50, 50)         ->addRule(Form::EQUAL, 'Heslo a zopakované heslo musí byť rovnaké!', $form['heslo'])				 ->setRequired('Zopakované heslo musí byť zadané!');    if ($user_view_fields_pohl) {      $form->addSelect('pohl', 'Pohlavie', ['M'=>'Muž','Z'=>'Žena']);    }    $form->onValidate[] = [$this, 'validateAddUserForm'];    $form->addSubmit('uloz', 'Ulož')         ->setAttribute('class', 'btn btn-success');    $form->addSubmit('cancel', 'Cancel')->setAttribute('class', 'btn btn-default')         ->setValidationScope([]);		return $form;	}    /** Vlastná validácia pre AddUserForm   * @param Nette\Application\UI\Form $button   */  public function validateAddUserForm($button) {    $values = $button->getForm()->getValues();        if ($button->isSubmitted()->name == 'uloz') {      // Over, ci dane username uz existuje.      if ($this->users->findBy(['username'=>$values->username])->count() > 0) {        $button->addError(sprintf('Zadané užívateľské meno %s už existuje! Zvolte prosím iné!', $values->username));      }      // Over, ci dany email uz existuje.      if ($this->users->findBy(['email'=>$values->email])->count() > 0) {        $button->addError(sprintf('Zadaný e-mail %s už existuje! Zvolte prosím iný!', $values->email));      }    }   }}