<?phpnamespace App\AdminModule\Presenters\Forms\Article;use Nette\Application\UI\Form;use Nette\Utils\Html;use Nette\Security\User;use DbTable;/** * Formular pre editaciu poloziek menu * Posledna zmena 02.03.2016 *  * @author     Ing. Peter VOJTECH ml. <petak23@gmail.com> * @copyright  Copyright (c) 2012 - 2016 Ing. Peter VOJTECH ml. * @license * @link       http://petak23.echo-msz.eu * @version    1.0.3 */class EditMenuFormFactory {    /** @var Nette\Security\User */  protected $user;  /** @var DbTable\Lang */  public $lang;    /** @var array Hodnoty id=>nazov pre formulare z tabulky registracia */  protected $urovneReg;  /** @var array Hodnoty id=>nazov pre formulare z tabulky hlavicka */  protected $hlavickaForm;  /** @var array Hodnoty id=>nazov pre formulare z tabulky dlzka_novinky */  public $dlzkaNovinkyForm;  /**   * @param User $user   * @param DbTable\Registracia $registracia   * @param DbTable\Lang $lang   * @param DbTable\Hlavicka $hlavicka   * @param DbTable\Dlzka_novinky $dlzka_novinky   */  public function __construct(User $user, DbTable\Registracia $registracia, DbTable\Lang $lang, DbTable\Hlavicka $hlavicka, DbTable\Dlzka_novinky $dlzka_novinky) {    $this->user = $user;    $this->urovneReg = $registracia->urovneReg($this->user->isLoggedIn() ? $this->user->getIdentity()->id_registracia : 0);    $this->lang = $lang;    $this->hlavickaForm = $hlavicka->hlavickaForm();    $this->dlzkaNovinkyForm = $dlzka_novinky->dlzkaNovinkyForm();  }    /**   * Edit hlavne menu form component factory.   * @param int $uroven Uroven polozky v menu   * @param string $uloz Text tlacitka uloz   * @param boolean $vlastnik Vlastnictvo editovanej polozky   * @param boolean $edit Pre skrytie poloziek pri editacii   * @param boolean $opravnenia Opravnenia pre nevlastnikov   * @return Form   */  public function form($uroven, $uloz, $vlastnik, $edit, $opravnenia)  {		$form = new Form();		$form->addProtection();    $form->addGroup();    $form->addHidden("id");    $form->addHidden("id_druh");$form->addHidden("id_user_profiles");$form->addHidden("spec_nazov");    $form->addHidden("langtxt");$form->addHidden("id_hlavne_menu_cast");    $form->addHidden("uroven");$form->addHidden("id_nadradenej");$form->addHidden("modified");    if (!$edit) {      $form->addSelect('id_registracia', 'Povolené prezeranie pre min. úroveň:', $this->urovneReg);    }    if ($this->user->isInRole("admin")) {      $form->addText('nazov_ul_sub', 'Názov alternatívneho vzhľadu:', 20, 20);      $form->addText('ikonka', 'Názov class ikonky pre FontAwesome:', 90, 30);      if ($uroven) {        $form->addHidden('id_hlavicka');      } else {	         $form->addSelect('id_hlavicka', 'Druh priradenej hlavičky:', $this->hlavickaForm)            ->addRule(Form::FILLED, 'Je nutné vybrať hlavičku.');      }//      $form->addCheckbox('zvyrazni', ' Zvýraznenie položky pri pridaní obsahu');    }    $form->addText('poradie', 'Poradie položky v časti:', 3, 3)				 ->addRule(Form::RANGE, 'Poradie musí byť v rozsahu od %d do %d!', array(1, 9999))				 ->setRequired('Poradie musí byť zadané!');    if (!$edit) {      $form->addCheckbox('platnost', ' Sledovanie aktuálnosti článku')           ->setOption('description', 'Zaškrtnutím sa otvorí pole, v ktorom je možné zadať do kedy je článok aktuálny. Po tomto dátume sa už na webe článok nezobrazí. Bude viditeľný len v administrácii!')           ->addCondition(Form::EQUAL, TRUE)           ->toggle("platnost-i", TRUE);      $form->addGroup()->setOption('container', Html::el('fieldset')->id("platnost-i"));      $form->addDatePicker('datum_platnosti', 'Dátum platnosti')           ->addConditionOn($form['platnost'], Form::EQUAL, TRUE)           ->addRule(Form::FILLED, 'Je nutné vyplniť dátum platnosti!');      $form->addGroup();    }    if ($vlastnik) {      $form->addSelect('povol_pridanie', 'Oprávnenie nevlastníkov:', $opravnenia)           ->setOption('description', 'Výberom sa pridajú oprávnenia aj pre užívateľov, ktorý nie sú vlastníci článku');    }    $form->addText('absolutna', 'Absolútna adresa:', 90, 50);    $form->addSelect('id_dlzka_novinky', 'Dĺžka novinky:', $this->dlzkaNovinkyForm)         ->setOption('description', 'Dĺžka času (v dňoch), za ktorý je článok považovaný za novinku od jeho poslednej zmneny');		// Cast textov ----------------- 		foreach ($this->lang->findAll() as $j) {      $form->addText($j->skratka.'_nazov', 'Názov položky pre jazyk'.$j->nazov.":", 30, 100)           ->addRule(Form::MIN_LENGTH, 'Názov musí mať spoň %d znaky!', 2)           ->setRequired('Názov  pre jazyk "'.$j->nazov.'" musí byť zadaný!');      $form->addText($j->skratka.'_h1part2', 'Druhá časť nadpisu pre jazyk'.$j->nazov.":", 90, 100);      $form->addText($j->skratka.'_description', 'Podrobnejší popis položky pre jazyk'.$j->nazov.":", 90, 255)           ->addRule(Form::MIN_LENGTH, 'Popis musí mať spoň %d znaky!', 2)           ->setOption('description', 'Podrobnejší popis položky slúži pre vyhľadávače a zároveň ako pomôcka pre užívateľa, keď príde ukazovateľom myši nad odkaz(bublinová nápoveda).')           ->setRequired('Popis pre jazyk "'.$j->nazov.'" musí byť zadaný!');		}		// Cast textov koniec -----------------    $form->addSubmit('uloz', $uloz)->setAttribute('class', 'btn btn-success');    $form->addSubmit('cancel', 'Cancel')->setAttribute('class', 'btn btn-default')->setValidationScope(FALSE);		return $form;	}}interface IEditMenuFormFactory {  /** @return EditMenuFormFactory */  function create();}