<?phpnamespace App\AdminModule\Presenters;use DbTable;/** * Prezenter pre spravu uzivatela. *  * Posledna zmena(last change): 06.03.2017 * @actions default, add, edit[$id], categories, editCategori[$id] * *	Modul: ADMIN * * @author Ing. Peter VOJTECH ml. <petak23@gmail.com> * @copyright  Copyright (c) 2012 - 2017 Ing. Peter VOJTECH ml. * @license * @link       http://petak23.echo-msz.eu * @version 1.1.0 */class UserPresenter extends \App\AdminModule\Presenters\BasePresenter {  // --- Models ---  /** @var DbTable\Users @inject */	public $users;  /** @var DbTable\User_categories @inject */	public $user_categories;  /** @var DbTable\User_in_categories @inject */	public $user_in_categories;  /** @var DbTable\User_profiles @inject */	public $user_profiles;    // --- Forms ---  /** @var Forms\User\AddUserFormFactory @inject*/	public $addUserForm;  /** @var Forms\User\EditUserFormFactory @inject*/	public $editUserForm;  /** @var Forms\User\EditCategoriFormFactory @inject*/	public $editCategoriForm;  /** @var Nette\Database\Table\ActiveRow Udaje konkretneho clena*/  private $clen;  /** @var array Nastavenie zobrazovania volitelnych poloziek */  private $user_view_fields;  protected function startup() {    parent::startup();    $this->user_view_fields = $this->nastavenie['user_view_fields'];	}    /** Render pre default-nu akciu */  public function renderDefault() {		$this->template->poc_pr_udaje = $this->user_profiles->getPocetPr();		//Zistenie max a sum prihlásenia		$this->template->clenovia = $this->user_profiles->findAll();    $this->template->h2 = 'Výpis všetkých členov';    $this->template->user_view_fields = $this->user_view_fields;	}  /** Akcia pridania uzivatela */  public function renderAdd() {    $this->template->h2 = 'Pridanie nového užívateľa';	}  /** Akcia pre editaciu clena   * @param int $id Id editovaneho clena   */  public function actionEdit($id) {    if (($this->clen = $this->user_profiles->find($id)) === FALSE) {			$this->setView('notFound');		} else {      $this->template->h2 = 'Editácia profilu';      $this["editUserForm"]->setDefaults($this->clen);      $this["editUserForm"]->setDefaults([        'created'   => $this->clen->created < '2000-01-02' ? StrFTime("%Y-%m-%d %H:%M:%S", Time()) : $this->clen->created,        'modified'  => StrFTime("%Y-%m-%d %H:%M:%S", Time()),        'username'  => $this->clen->user->username,        'email'  => $this->clen->user->email,          ]);    }	}    public function renderCategories() {    $this->template->categories = $this->user_categories->findAll();  }    public function actionEditCategori($id = 0) {    if ($id && ($categ = $this->user_categories->find($id)) === FALSE) {			$this->setView('notFound');		} elseif ($id) {      $this["editCategoriForm"]->setDefaults($categ);    }  }    /** Formular pre pridanie uzivatela.	 * @return Nette\Application\UI\Form	 */	protected function createComponentAddUserForm() {    $form = $this->addUserForm->create($this->users, $this->urovneReg, $this->user_view_fields["pohl"]);    $form['uloz']->onClick[] = [$this, 'addUserFormSubmitted'];    $form['cancel']->onClick[] = function () {			$this->redirect('User:');		};		return $this->_vzhladForm($form);	}    /** Spracovanie formulara pre pridanie uzivatela   * @param Nette\Forms\Controls\SubmitButton $button Data formulara   */  public function addUserFormSubmitted($button) {		// Inicializacia    $values = $button->getForm()->getValues(); 	//Nacitanie hodnot formulara    $hasser = $this->user->getAuthenticator(); //Ziskanie objektu pre vytvaranie hash hesla a iných    $hasser->PasswordHash(8,FALSE);            //Nastavenie        //Uloz info do tabulky users    $uloz_users = $this->users->uloz([ //Ulozenie do tabulky users      'username'  => $values->username,      'password'  => $hasser->HashPassword($values->heslo),      'email'     => $values->email,      'activated' => 1,    ]);    if (!empty($uloz_users['id'])) { //Ulozenie v poriadku      $uloz_user_profiles = $this->user_profiles->uloz([ //Ulozenie do tabulky user_profiles        'id_users'  => $uloz_users['id'], //vloz id ulozeneho clena        'meno'      => $values->meno,        'priezvisko'=> $values->priezvisko,        'id_registracia'  => $values->id_registracia,        'pohl'      => isset($values->pohl) ? $values->pohl : 'Z',        'modified'  => StrFTime("%Y-%m-%d %H:%M:%S", Time()),        'created'   => StrFTime("%Y-%m-%d %H:%M:%S", Time()),      ]);    }    if (!empty($uloz_user_profiles['id'])) { //Ulozenie v poriadku      $this->flashRedirect('User:', 'Nový užívateľ uložený v poriadku!', 'success');    } else { $this->flashMessage('Uloženie sa nepodarilo!', 'danger');}	//Ulozenie sa nepodarilo  }  /**   * Edit user form component factory. Tovarnicka na formular pre editaciu clena   * @return \Nette\Application\UI\Form */	protected function createComponentEditUserForm() {    $form = $this->editUserForm->create($this->user_view_fields);    $form['uloz']->onClick[] = function ($button) {       $this->flashOut(!count($button->getForm()->errors), 'User:', 'Údaje boli uložené!', 'Došlo k chybe a údaje sa neuložili. Skúste neskôr znovu...');		};    $form['cancel']->onClick[] = function () {			$this->redirect('User:');		};		return $this->_vzhladForm($form);	}  /**   * Edit categori form component factory. Tovarnicka na formular pre editaciu kategorie   * @return \Nette\Application\UI\Form */	protected function createComponentEditCategoriForm() {    $form = $this->editCategoriForm->create();    $form['uloz']->onClick[] = function ($button) {       $this->flashOut(!count($button->getForm()->errors), 'User:categories', 'Kategória bola uložená!', 'Došlo k chybe a kategória sa neuložila. Skúste neskôr znovu...');		};    $form['cancel']->onClick[] = function () {			$this->redirect('User:categories');		};		return $this->_vzhladForm($form);	}  /** Filtre pre sablonu   * @param type $class   * @return type   */	protected function createTemplate($class = NULL) {    $template = parent::createTemplate($class);    //Helper clenclass - vyber classu podla poctu prihlaseni    $template->addFilter('clenclass', function ($pocet, $max) {    	$pok=100*$pocet/$max;      return "vyb".($pok>70 ? 1 : ($pok>45 ? 2 : ($pok>30 ? 3 : ($pok>0 ? 4 : 5))));    });    return $template;	}      /** Funkcia pre spracovanie signálu vymazavania	  * @param int $id - id polozky v hlavnom menu		* @param string $nazov - nazov polozky z hl. menu - na zrusenie?		* @param string $druh - blizsia specifikacia, kde je to potrebne		*/	function confirmedDelete($id, $nazov, $druh = "")	{    if ($druh === "admin") {       $path = $this->context->parameters["wwwDir"] . "/www/files/".$id;      if (is_dir($path)) { //Vymazanie adresaru s avatarom        foreach (glob("$path*.{jpg,jpeg,gif,png}", GLOB_BRACE) as $file) {          @unlink($file);        }        rmdir($path);      }      $clen =$this->user_profiles->find($id);      $clen_id_users = $clen->id_users;      $meno = $clen->meno." ".$clen->priezvisko;      try {        $this->user_profiles->oprav($id, ['id_users'=>1]);        $this->users->zmaz($clen_id_users);        $this->user_profiles->zmaz($id);        $this->flashMessage('Užívateľ '.$meno.' bol zmazaný!', 'success');      } catch (Exception $e) {        $this->flashMessage('Došlo k chybe pri vymazávaní. Skúste neskôr znovu...'.$e->getMessage(), 'danger');      }      if (!$this->isAjax()) { $this->redirect('User:'); }    } elseif ($druh === "categori") {      try {        $this->user_categories->zmaz($id);        $this->flashMessage('Kategória bola zmazaná!', 'success');      } catch (Exception $e) {        $this->flashMessage('Došlo k chybe pri vymazávaní. Skúste neskôr znovu...'.$e->getMessage(), 'danger');      }      if (!$this->isAjax()) { $this->redirect('User:categories'); }    }  }    /**   * Akcia pre generovanie news_key pre vsetkych uzivatelov *///  public function actionGenerujNewsKey() {//    if ($this->user->isInRole('admin')) {//      $nk = new \PeterVojtech\News_key\NewsKeyControl($this->user_profiles, $this->user);//      $koniec = TRUE;//      foreach ($this->user_profiles->findAll() as $u) {//        $koniec = $nk->Generate($u->id) !== FALSE ? $koniec : FALSE;//      }//    } else { $koniec = FALSE; }//    $this->flashRedirect("User:", $koniec ? "Ukončené v poriadku" : "Chyba generovania", $koniec ? "success" : "danger");//  }}