<?phpnamespace DbTable;use Nette;/** * Model, ktory sa stara o tabulku udaje * Posledna zmena 11.11.2016 *  * @author     Ing. Peter VOJTECH ml. <petak23@gmail.com> * @copyright  Copyright (c) 2012 - 2016 Ing. Peter VOJTECH ml. * @license * @link       http://petak23.echo-msz.eu * @version    1.0.3 */class Udaje extends Table {  /** @var string */  protected $tableName = 'udaje';  /** Vrati pozadovany zaznam kluca alebo false   * @param string $kluc Nazov kluca   * @return \Nette\Database\Table\ActiveRow|FALSE */  public function getKluc($kluc) {    return strlen($kluc) ? $this->findOneBy(['nazov'=>$kluc]) : FALSE;  }    /** Opravy v tabulke zaznam s danym nazvom   * @param string $kluc polozka stlpca nazov   * @param string $data hodnota stlpca text pre dany kluc   * @return integer */  public function opravKluc($kluc, $data) {    return $this->getTable()->where(['nazov'=>$kluc])->update(['text'=>$data]);  }  /** Vrati vsetky dostupne udaje podla registracie   * @param int $id_reg min. uroven registracie   * @return \Nette\Database\Table\Selection */  public function vypisUdaje($id_reg = 0) {    return $this->getTable()->where("id_registracia <= ?", $id_reg);  }    /** Funkcia vrati celociselnu hodnotu udaju s nazvom   * @param string $nazov Nazov udaju   * @return int   */  public function getUdajInt($nazov = "") {    $p = $this->findOneBy(['nazov'=>$nazov]);    return $p !== FALSE ? (int)$p->text : 0;  }    /** Funkcia pre ulozenie udaju   * @param Nette\Utils\ArrayHash $values   * @param array $ur_reg   * @return Nette\Database\Table\ActiveRow|FALSE   * @throws Database\DriverException   */  public function ulozUdaj(Nette\Utils\ArrayHash $values, $ur_reg) {    $id = isset($values->id) ? $values->id : 0;    unset($values->id);    if (isset($values->spravca)) {      $values->offsetSet("id_registracia", $values->spravca ? $ur_reg['spravca'] : $ur_reg['admin']);      unset($values->spravca);    }    if (isset($values->druh_null)) {      $values->offsetSet("id_druh", $values->druh_null ? NULL : (isset($values->id_druh) ? $values->id_druh : 1));      unset($values->druh_null);    } elseif (isset($values->id_druh)) { unset($values->id_druh); }    try {      return $this->uloz($values, $id);    } catch (Exception $e) {      throw new Database\DriverException('Chyba ulozenia: '.$e->getMessage());    }  }    /** Vrati pozadovane usporiadanie oznamov alebo false   * @return boolean */  public function getOznamUsporiadanie() {    $tmp = $this->findOneBy(['nazov'=>"oznam_usporiadanie"]);    return $tmp !== FALSE ? (boolean)$tmp->text : FALSE;  }}